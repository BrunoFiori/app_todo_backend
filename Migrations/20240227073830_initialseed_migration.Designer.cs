// <auto-generated />
using System;
using App_Todo_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace App_Todo_Backend.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20240227073830_initialseed_migration")]
    partial class initialseed_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("App_Todo_Backend.Data.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Done")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedAt = new DateTime(2024, 2, 27, 15, 16, 25, 0, DateTimeKind.Utc),
                            Description = "Estudar C# para melhorar minhas habilidades com a linguagem",
                            Done = false,
                            Title = "Estudar C#"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CreatedAt = new DateTime(2024, 2, 27, 18, 27, 45, 0, DateTimeKind.Utc),
                            Description = "Estudar Ciências COntábeis para sustentar o Bruno 💕",
                            Done = false,
                            Title = "Estudar Ciências Contábeis 🤑"
                        });
                });

            modelBuilder.Entity("App_Todo_Backend.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("HashPassword")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "brunocfiori@hotmail.com",
                            HashPassword = "AHyrwxO7KuCAR9tGtDmkqULcKbcXqxbzfpWzEj+wyl893W7cUMejonoF+KaCT9GbWQ==",
                            Name = "Bruno Canteiro Fiori"
                        },
                        new
                        {
                            Id = 2,
                            Email = "lesemensato@gmail.com",
                            HashPassword = "AL0UYOixIiOztyrNtu5/E8kPO5BXJkJpJYFKd549famQB2mGF+ADGEvJhYMlne8ppg==",
                            Name = "Leticia Semensato"
                        });
                });

            modelBuilder.Entity("App_Todo_Backend.Data.Todo", b =>
                {
                    b.HasOne("App_Todo_Backend.Data.User", "Author")
                        .WithMany("Todos")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("App_Todo_Backend.Data.User", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
